{"ast":null,"code":"var _jsxFileName = \"K:\\\\Booking2\\\\airbnb_booking-clone\\\\booking\\\\src\\\\Components\\\\Authorization\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport NavigateHeader from \"../General page/NavigateHeader\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const API_USERDATA = \"\"; // Замените на ваш API endpoint\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n\n  // Функция для декодирования JWT токена\n  const parseJwt = token => {\n    if (!token) return null;\n    try {\n      return jwt_decode(token);\n    } catch (error) {\n      console.error(\"Ошибка при декодировании токена:\", error);\n      return null;\n    }\n  };\n\n  // Проверка авторизации и получение данных пользователя\n  useEffect(() => {\n    const authToken = sessionStorage.getItem(\"auth_token\");\n    if (!authToken) {\n      navigate(\"/login\");\n      return;\n    }\n    const tokens = JSON.parse(authToken);\n    const decodedToken = parseJwt(tokens.refresh);\n    if (decodedToken) {\n      setUsername(decodedToken.username);\n      setUserId(decodedToken.user_id);\n    }\n  }, [navigate]);\n\n  // Получение данных профиля с сервера\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const authToken = sessionStorage.getItem(\"auth_token\");\n      if (!authToken) return;\n      const tokens = JSON.parse(authToken);\n      try {\n        const response = await fetch(API_USERDATA, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"*/*\",\n            Authorization: `Bearer ${tokens.access}`\n          },\n          body: JSON.stringify({\n            refresh_token: tokens.refresh\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Данные пользователя:\", data);\n          // Обработайте данные пользователя здесь\n        } else {\n          console.error(\"Ошибка при получении данных:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при запросе данных:\", error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigateHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"bkSTsA0rBFzOutkihObS9qBRIs4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","NavigateHeader","jwt_decode","jsxDEV","_jsxDEV","ProfilePage","_s","id","navigate","API_USERDATA","username","setUsername","userId","setUserId","parseJwt","token","error","console","authToken","sessionStorage","getItem","tokens","JSON","parse","decodedToken","refresh","user_id","fetchUserData","response","fetch","method","headers","Accept","Authorization","access","body","stringify","refresh_token","ok","data","json","log","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["K:/Booking2/airbnb_booking-clone/booking/src/Components/Authorization/ProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport NavigateHeader from \"../General page/NavigateHeader\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst ProfilePage = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const API_USERDATA = \"\"; // Замените на ваш API endpoint\r\n  const [username, setUsername] = useState(\"\");\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  // Функция для декодирования JWT токена\r\n  const parseJwt = (token) => {\r\n    if (!token) return null;\r\n    try {\r\n      return jwt_decode(token);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при декодировании токена:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Проверка авторизации и получение данных пользователя\r\n  useEffect(() => {\r\n    const authToken = sessionStorage.getItem(\"auth_token\");\r\n    if (!authToken) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const tokens = JSON.parse(authToken);\r\n    const decodedToken = parseJwt(tokens.refresh);\r\n    if (decodedToken) {\r\n      setUsername(decodedToken.username);\r\n      setUserId(decodedToken.user_id);\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Получение данных профиля с сервера\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const authToken = sessionStorage.getItem(\"auth_token\");\r\n      if (!authToken) return;\r\n\r\n      const tokens = JSON.parse(authToken);\r\n      try {\r\n        const response = await fetch(API_USERDATA, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"*/*\",\r\n            Authorization: `Bearer ${tokens.access}`,\r\n          },\r\n          body: JSON.stringify({ refresh_token: tokens.refresh }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(\"Данные пользователя:\", data);\r\n          // Обработайте данные пользователя здесь\r\n        } else {\r\n          console.error(\"Ошибка при получении данных:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка при запросе данных:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavigateHeader />\r\n      <div>\r\n        <h1>Профиль пользователя</h1>\r\n        <p>ID: {id}</p>\r\n        <p>Имя пользователя: {username}</p>\r\n        <p>User ID: {userId}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,YAAY,GAAG,EAAE,CAAC,CAAC;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMgB,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IACvB,IAAI;MACF,OAAOb,UAAU,CAACa,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI;IACb;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,IAAI,CAACF,SAAS,EAAE;MACdV,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMa,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;IACpC,MAAMM,YAAY,GAAGV,QAAQ,CAACO,MAAM,CAACI,OAAO,CAAC;IAC7C,IAAID,YAAY,EAAE;MAChBb,WAAW,CAACa,YAAY,CAACd,QAAQ,CAAC;MAClCG,SAAS,CAACW,YAAY,CAACE,OAAO,CAAC;IACjC;EACF,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;;EAEd;EACAX,SAAS,CAAC,MAAM;IACd,MAAM8B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMT,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;MACtD,IAAI,CAACF,SAAS,EAAE;MAEhB,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MACpC,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACpB,YAAY,EAAE;UACzCqB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,MAAM,EAAE,KAAK;YACbC,aAAa,EAAE,UAAUZ,MAAM,CAACa,MAAM;UACxC,CAAC;UACDC,IAAI,EAAEb,IAAI,CAACc,SAAS,CAAC;YAAEC,aAAa,EAAEhB,MAAM,CAACI;UAAQ,CAAC;QACxD,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACU,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;UAClCvB,OAAO,CAACwB,GAAG,CAAC,sBAAsB,EAAEF,IAAI,CAAC;UACzC;QACF,CAAC,MAAM;UACLtB,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEY,QAAQ,CAACc,UAAU,CAAC;QACpE;MACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAAuC,QAAA,gBACEvC,OAAA,CAACH,cAAc;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClB3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B3C,OAAA;QAAAuC,QAAA,GAAG,MAAI,EAACpC,EAAE;MAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf3C,OAAA;QAAAuC,QAAA,GAAG,+FAAkB,EAACjC,QAAQ;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC3C,OAAA;QAAAuC,QAAA,GAAG,WAAS,EAAC/B,MAAM;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CA9EID,WAAW;EAAA,QACAL,SAAS,EACPD,WAAW;AAAA;AAAAiD,EAAA,GAFxB3C,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}