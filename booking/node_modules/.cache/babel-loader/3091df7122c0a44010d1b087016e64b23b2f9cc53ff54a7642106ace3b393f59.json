{"ast":null,"code":"var _jsxFileName = \"K:\\\\Booking2\\\\airbnb_booking-clone\\\\booking\\\\src\\\\Components\\\\Search\\\\DetailCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Footer from \"../General page/Footer\";\nimport NavigateHeader from \"../General page/NavigateHeader\";\nimport Card from \"./Card\";\nimport NotFound from \"../General page/NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailCard = ({\n  images\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [objectRoom, setObjectRoom] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_URL_ID = `http://127.0.0.1:8000/api/v1/search/${id}/`;\n  const API_REVIEWS = `http://127.0.0.1:8000/api/v1/object_reviews/${id}/`;\n  const HEADERS = {\n    'Accept': '*/*'\n    // \"Authorization\": `Bearer ${sessionStorage.getItem(\"auth_token\")}`\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Запрос данных о комнате\n        const roomResponse = await axios.get(API_URL_ID, {\n          headers: HEADERS\n        });\n        setObjectRoom(roomResponse.data);\n\n        // Запрос отзывов\n        const reviewsResponse = await axios.get(API_REVIEWS, {\n          headers: HEADERS\n        });\n        setReviews(reviewsResponse.data);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, API_URL_ID, API_REVIEWS]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigateHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      item: objectRoom,\n      reviews: reviews,\n      image: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(DetailCard, \"/3prCKSiiRgVVZBc3SqxY0jEpic=\", false, function () {\n  return [useParams];\n});\n_c = DetailCard;\nexport default DetailCard;\nvar _c;\n$RefreshReg$(_c, \"DetailCard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Footer","NavigateHeader","Card","NotFound","jsxDEV","_jsxDEV","DetailCard","images","_s","id","objectRoom","setObjectRoom","reviews","setReviews","loading","setLoading","error","setError","API_URL_ID","API_REVIEWS","HEADERS","fetchData","roomResponse","get","headers","data","reviewsResponse","console","children","fileName","_jsxFileName","lineNumber","columnNumber","item","image","_c","$RefreshReg$"],"sources":["K:/Booking2/airbnb_booking-clone/booking/src/Components/Search/DetailCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../General page/Footer\";\r\nimport NavigateHeader from \"../General page/NavigateHeader\";\r\nimport Card from \"./Card\";\r\nimport NotFound from \"../General page/NotFound\";\r\n\r\nconst DetailCard = ({ images }) => {\r\n    const { id } = useParams();\r\n    const [objectRoom, setObjectRoom] = useState(null);\r\n    const [reviews, setReviews] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const API_URL_ID = `http://127.0.0.1:8000/api/v1/search/${id}/`;\r\n    const API_REVIEWS = `http://127.0.0.1:8000/api/v1/object_reviews/${id}/`;\r\n    const HEADERS = {\r\n        'Accept': '*/*',\r\n        // \"Authorization\": `Bearer ${sessionStorage.getItem(\"auth_token\")}`\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Запрос данных о комнате\r\n                const roomResponse = await axios.get(API_URL_ID, { headers: HEADERS });\r\n                setObjectRoom(roomResponse.data);\r\n\r\n                // Запрос отзывов\r\n                const reviewsResponse = await axios.get(API_REVIEWS, { headers: HEADERS });\r\n                setReviews(reviewsResponse.data);\r\n            } catch (error) {\r\n                console.error(\"Ошибка при загрузке данных:\", error);\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [id, API_URL_ID, API_REVIEWS]);\r\n\r\n    if (loading) {\r\n        return <div>Загрузка...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <NotFound />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavigateHeader />\r\n            <Card item={objectRoom} reviews={reviews} image={images} />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}